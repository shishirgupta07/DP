class Solution {
    public List<List<Integer>> permuteUnique(int[] nums) {
        
        List<List<Integer>> l=new ArrayList<>();
        Arrays.sort(nums);
        boolean b[]=new boolean[nums.length];
        permu(nums,l,new ArrayList<Integer>(),b);
        return  l;
        
    }
    public void permu(int nums[],List<List<Integer>> l,ArrayList<Integer> al,boolean b[])
    {
        if(nums.length==al.size())
        {
            l.add(new ArrayList<Integer>(al));
            return ;
        }
        for(int i=0;i<nums.length;i++)
        {
            if(b[i]) continue;
            if(i>0 && nums[i]==nums[i-1] && !b[i-1]) continue;
            
                b[i]=true;
                al.add(nums[i]);
                permu(nums,l,al,b);
                b[i]=false;
                al.remove(al.size()-1);
            
        }
    }
}
